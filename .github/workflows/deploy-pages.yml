name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/workflows/**'
      - 'README.md'
      - 'LICENSE'
  workflow_dispatch:

jobs:
  build-and-deploy: # 将 build 和 deploy 合并为一个 job，更清晰
    runs-on: ubuntu-latest
    env:
      REPO_URL: "5um3rM0/5um3rM0.github.io"
      BUILD_PATH: ".vitepress/dist"
      CUSTOM_DOMAIN: "5um3rM0.github.io"

    steps:
      - name: Checkout repository 🛎️
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 引入 pnpm 的官方 setup action
      - name: Setup pnpm ⚡️
        uses: pnpm/action-setup@v3
        with:
          version: 8

      # Node.js Action 与 pnpm 共享缓存，速度更快
      - name: Set up Node.js 🟩
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      # 使用 pnpm 进行依赖安装和构建
      - name: Install dependencies and build 📦
        run: |
          pnpm install --frozen-lockfile
          pnpm run build

      # 手动部署逻辑
      - name: Deploy to GitHub Pages 🚀
        run: |
          echo "Starting deployment..."
          # 克隆 pages 分支到临时目录
          git clone --depth 1 --branch pages https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ env.REPO_URL }}.git temp_pages
          
          echo "Clearing old content..."
          # 清空旧文件，但保留 .git 目录
          cd temp_pages
          git rm -rf .
          cd ..
          
          echo "Copying new build files..."
          # 复制构建产物
          cp -r ${{ env.BUILD_PATH }}/* temp_pages/
          
          # 进入部署目录并配置 git
          cd temp_pages
          # 检查是否需要 CNAME 文件（对于用户/组织页面，通常不需要）
          # 如果您的仓库名就是 5um3rM0.github.io，则不需要 CNAME
          # rm -f CNAME 
          
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          
          echo "Committing and pushing changes..."
          git add .
          
          # 检查是否有文件变动，只有在有变动时才提交
          if git diff-index --quiet HEAD; then
            echo "No changes to commit."
          else
            git commit -m "Deploy: $(date -u +'%Y-%m-%d %H:%M:%S')"
            git push origin pages
            echo "Deployment successful!"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}